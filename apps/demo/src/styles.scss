@use 'sass:map';
@use '@angular/material';
@use '@angular/material/theming';

@use 'libs/sls-shared-sass/src/lib' as theme;

@use 'app-theme/_all-component' as app-theme;
@use 'app-theme/_typography' as app-typography;

@include material.core();

//@include theme.lib-theme-all-theme(theme);                          // extra grm base widget styles dark/light

//@include theme.lib-apply-library-theme(theme.$lib-light-theme);     // extra grm base widget styles dark/light
//@include app-theme.cascade(theme.$lib-light-theme);                 // app feature styles dark/light

html, body {
    height: 100vh;
    padding: 0;
}

body {
    margin: 0;
}

.flex-fill {
    flex: 1 1 auto;
}

//@include material.all-component-themes(theme.$lib-light-theme); // material base styles dark/light
//@include theme.lib-apply-library-theme(theme.$lib-light-theme);      // extra grm base widget styles dark/light
//@include app-theme.cascade(theme.$lib-light-theme);              // app feature styles dark/light

body.light {
    @include material.all-component-themes(theme.$lib-light-theme);  // material base styles dark/light
    @include theme.lib-apply-library-theme(theme.$lib-light-theme);      // extra grm base widget styles dark/light
    @include app-theme.cascade(theme.$lib-light-theme);              // app feature styles dark/light
}

body.dark {
    @include material.all-component-themes(theme.$lib-dark-theme);  // material base styles dark/light
    @include theme.lib-apply-library-theme(theme.$lib-dark-theme);      // extra grm base widget styles dark/light
    @include app-theme.cascade(theme.$lib-dark-theme);              // app feature styles dark/light
}

@media screen and (max-width: 479px) {
    @include material.all-component-typographies(theme.$lib-mobile-font-config);
    @include theme.lib-apply-library-typography(theme.$lib-mobile-font-config);
    @include app-typography.apply-app-typography(theme.$lib-mobile-font-config);
}


.space-maintainer {
    flex: 1 1 auto;
}















//$color-config: material.get-color-config(theme.$dark-theme);
//@include material.all-component-themes(theme.$light-theme);
//@include theme.apply-library-theme(theme.$light-theme);
//@include app-theme.cascade(theme.$light-theme);

//.darkMode {
//    @include material.all-component-themes(theme.$dark-theme);
//    @include theme.theme(theme.$dark-theme);
//    @include app-theme.cascade(theme.$dark-theme);
//}





































//h1 {
//    @include breakpoint.xs;
//    @include breakpoint.sm;
//    @include breakpoint.md;
//    @include breakpoint.lg;
//    @include breakpoint.xl;
//    @include breakpoint.xxl;
//
//    @breakpoint.xs {
//        color: #1a468c;
//        background-color: #050f0f;
//    }
//    @sm {
//        color: #ff18e9;
//        background-color: #7caaaa;
//    }
//    @md {
//        color: #07155b;
//        background-color: #911e55;
//    }
//    @lg {
//        color: #dcc125;
//        background-color: #4458a8;
//    }
//    @xl {
//        color: red;
//        background-color: cyan;
//    }
//    @xxl {
//        color: #a3441f;
//        background-color: #2ee533;
//    }
//}



// ######################################################## //
//
//@use 'sass:list';
//@use 'sass:map';
//@use 'sass:meta';
//@use 'sass:math';
//@use 'sass:string';
//@use '_brand';
//@use '_breakpoint';
//@use '_constant';
//@use '_default';
//@use '@angular/material' as mat;
//@use '@angular/material/theming' as theming;
//@use 'theming/_root-theme' as root-theme;
//@use 'theming/_root-color' as root-color;
//@use 'theming/_root-typography' as root-typography;
//
//@import '@angular/material';
//@import '@angular/material/theming';
//@import 'breakpoint';
//
//@include material.core();
//
//$angular-primary: material.define-palette(material.$teal-palette, 500, 100, 900);
//$angular-accent: material.define-palette(material.$pink-palette, A200, A100, A400);
//$angular-warn: material.define-palette(material.$red-palette);
//
//// Create the theme objects (a Sass map containing all of the palettes).
//$light-theme: theming.mat-light-theme($angular-primary, $angular-accent, $angular-warn);
//$dark-theme: theming.mat-dark-theme($angular-primary, $angular-accent, $angular-warn);
//
//// Load core styles which independent from theme
//// It should be included once
//@include root-theme.app-theme($light-theme);
//
//html, body { height: 100%; }
//body {
//  margin: 0;
//}
//
//.theme-dark {
//  @include root-theme.app-theme($dark-theme);
//}
//.theme-light {
//  @include root-theme.app-theme($light-theme);
//}
