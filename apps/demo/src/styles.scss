@use 'sass:map';
@use '@angular/material';
@use '@angular/material/theming';

@use 'libs/sls-shared-sass/src/lib' as theme;

@use 'app-theme/_all-component' as app-theme;
@use 'app-theme/_typography' as app-typography;

@include material.core();

html, body {
    height: 100vh;
    padding: 0;
}

body {
    margin: 0;
}

.flex-fill {
    flex: 1 1 auto;
}

body.light {
    $color-config: material.get-color-config(theme.$lib-light-theme);
    $typography-config: material.get-color-config(theme.$lib-light-theme);
    @include material.all-component-themes(theme.$lib-light-theme);          // material base styles dark/light
    @include material.all-component-colors($color-config);
    @include material.all-component-typographies($typography-config);

    @include theme.lib-apply-library-theme(theme.$lib-light-theme);         // extra grm base widget styles dark/light
    @include app-theme.cascade(theme.$lib-light-theme);                     // app feature styles dark/light

    %overlay-light {
        $color-config: material.get-color-config(theme.$lib-light-theme);
        $typography-config: material.get-color-config(theme.$lib-light-theme);

        $primary: map-get($color-config, primary);
        $accent: map-get($color-config, accent);
        $warn: map-get($color-config, warn);

        background: primary;
    }
}

body.dark {
    $color-config: material.get-color-config(theme.$lib-dark-theme);
    $typography-config: material.get-color-config(theme.$lib-dark-theme);
    @include material.all-component-themes(theme.$lib-dark-theme);           // material base styles dark/light
    @include material.all-component-colors($color-config);
    @include material.all-component-typographies($typography-config);

    @include theme.lib-apply-library-theme(theme.$lib-dark-theme);          // extra grm base widget styles dark/light
    @include app-theme.cascade(theme.$lib-dark-theme);                      // app feature styles dark/light

    %overlay-dark {
        $color-config: material.get-color-config(theme.$lib-dark-theme);
        $typography-config: material.get-color-config(theme.$lib-dark-theme);

        $primary: map-get($color-config, primary);
        $accent: map-get($color-config, accent);
        $warn: map-get($color-config, warn);

        background: accent;
    }
}

@media screen and (max-width: 479px) {
    @include material.all-component-typographies(theme.$lib-mobile-font-config);
    @include theme.lib-apply-library-typography(theme.$lib-mobile-font-config);
    @include app-typography.apply-app-typography(theme.$lib-mobile-font-config);
}


.space-maintainer {
    flex: 1 1 auto;
}

%overlay-light {
    $color-config: material.get-color-config(theme.$lib-light-theme);
    $typography-config: material.get-color-config(theme.$lib-light-theme);

    $primary: map-get($color-config, primary);
    $accent: map-get($color-config, accent);
    $warn: map-get($color-config, warn);

    background: primary;
}

%overlay-dark {
    $color-config: material.get-color-config(theme.$lib-dark-theme);
    $typography-config: material.get-color-config(theme.$lib-dark-theme);

    $primary: map-get($color-config, primary);
    $accent: map-get($color-config, accent);
    $warn: map-get($color-config, warn);

    background: accent;
}
