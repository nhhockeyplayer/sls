@use 'sass:map';
@use '@angular/material';
@use '@angular/material/theming';

@use 'libs/sls-shared-sass/src/lib/theme/mechanics/breakpoint';
@use 'libs/sls-shared-sass/src/lib' as theme;

$theme: var(--theme) !default;


.rroot-main {
    display: flex;
    flex-direction: row;

    @if $theme == 'dark' {
        $theme: material.get-color-config(theme.$lib-dark-theme);
        $color-config: material.get-color-config($theme);
        $primary: map-get($color-config, primary);
        $accent: map-get($color-config, accent);
        $warn: map-get($color-config, warn);

        $primary-color: mat-color($primary);
        $accent-color: mat-color($accent);
        background: $primary-color;
        color: $accent-color;

        .root-main {
            background: $primary-color;
            color: $accent-color;
        }


        //background: black;
        //color: black;
    }
    @if $theme == 'light' {
        $theme: material.get-color-config(theme.$lib-light-theme);
        $color-config: material.get-color-config($theme);
        $primary: map-get($color-config, primary);
        $accent: map-get($color-config, accent);
        $warn: map-get($color-config, warn);

        $primary-color: mat-color($primary);
        $accent-color: mat-color($accent);

        .root-main {
            background: $primary-color;
            color: $accent-color;
        }
        background: $primary-color;
        color: $accent-color;

        //background: black;
        //color: black;
    }
}


@mixin app-component-theme($theme) {
    $background: map-get($theme, background);
    $foreground: map-get($theme, foreground);

    $color-config: material.get-color-config($theme);
    $primary: map-get($color-config, primary);
    $accent: map-get($color-config, accent);
    $warn: map-get($color-config, warn);
    $is-dark-theme: map-get($color-config, is-dark);

    $color-config: material.get-color-config($theme);
    $typography-config: material.get-typography-config($theme);

    @if $color-config != null {
        @include app-component-color($color-config);
    }
    @if $typography-config != null {
        @include app-component-typography($typography-config);
    }


    //.root-main {
    //    background: map-get($color-config, background);
    //    color: accent;
    //}
    //$primary-color: mat-color($primary);
    //$accent-color: mat-color($accent);
    //.root-main {
    //    background: $primary-color;
    //    color: $accent-color;
    //}
}

@mixin app-component-color($config) {
    @debug ('shiiit');
    $primary: map.get($config, primary);
    $accent: map.get($config, accent);
    $warn: map.get($config, warn);
    $background: map.get($config, background);
    $foreground: map.get($config, foreground);

    @debug ('shiiit', $primary);
    @debug ('shiiit', $accent);
    @debug ('shiiit', $warn);
    @debug ('shiiit', $background);
    @debug ('shiiit', $foreground);
    @debug ('shiiit', background);
    @debug ('shiiit', foreground);

    root-main {
        display: flex;
        flex-direction: row;

        %overlay-light {
            $color-config: material.get-color-config(theme.$lib-light-theme);
            $typography-config: material.get-color-config(theme.$lib-light-theme);

            $primary: map-get($color-config, primary);
            $accent: map-get($color-config, accent);
            $warn: map-get($color-config, warn);

            background: $primary;

            @debug ('light', $primary);
            @debug ('light', $accent);
            @debug ('light', $warn);
            @debug ('light', primary);
            @debug ('light', accent);
            @debug ('light', warn);

        }

        %overlay-dark {
            $color-config: material.get-color-config(theme.$lib-dark-theme);
            $typography-config: material.get-color-config(theme.$lib-dark-theme);

            $primary: map-get($color-config, primary);
            $accent: map-get($color-config, accent);
            $warn: map-get($color-config, warn);

            background-color: accent;

            @debug ('dark', $primary);
            @debug ('dark', $accent);
            @debug ('dark', $warn);
            @debug ('dark', primary);
            @debug ('dark', accent);
            @debug ('dark', warn);
        }

        .root-main {
            @extend %overlay-dark !optional;
            display: flex;
            flex-direction: row;

            @if $theme == 'dark' {
                @extend %overlay-dark !optional;
            }
            @if $theme == 'light' {
                @extend %overlay-light !optional;
            }
        }


    }

}

@mixin app-component-typography($config) {
    //@include theming.mat-base-typography($typography);
    //@include mat-card-typography($typography);
    //@include mat-select-typography($typography);
    //@include mat-form-field-typography($typography);
    //@include mat-slide-toggle-typography($typography);
    //@include mat-toolbar-typography($typography);
    //app-root {
    //    h1 {
    //        @include theming.mat-typography-level-to-styles($config, title);
    //    }
    //}


    @media (min-width: 0) {
        .responsive-test {
            color: red;
        }
    }
    @media (min-width: 480px) {
        .responsive-test {
            color: blue;
        }
    }
    @media (min-width: 720px) {
        .responsive-test {
            color: green;
        }
    }
    @media (min-width: 960px) {
        .responsive-test {
            color: purple;
        }
    }
    @media (min-width: 1200px) {
        .responsive-test {
            color: orange;
        }
    }
    @media (min-width: 1400px) {
        .responsive-test {
            color: pink;
        }
    }

}
