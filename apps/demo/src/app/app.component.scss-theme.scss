@use 'sass:list';
@use 'sass:map';
@use 'sass:meta';
@use 'sass:math';
@use 'sass:string';
@use 'sass:color';
@use '@angular/material';
@use '@angular/material/theming';

@use 'libs/sls-shared-sass/src/lib/theme/mechanics/breakpoint';
@use 'libs/sls-shared-sass/src/lib' as theme;

$theme: var(--theme) !default;
$is-light-theme: $theme == 'light';
@debug('$is-light-theme =====================>', $is-light-theme);


.root-main, main {
    display: flex;
    flex-direction: row;

    //@if $is-light-theme {
    //    background-color: red !important;
    //    color: white;
    //} @else {
    //    background-color: white !important;
    //    color: red;
    //}

    @if $theme == 'dark' {
        $theme: material.get-color-config(theme.$lib-dark-theme);
        $color-config: material.get-color-config($theme);
        $primary: map.get($color-config, primary);
        $accent: map.get($color-config, accent);
        $warn: map.get($color-config, warn);

        $primary-color: material.get-color-from-palette($primary);
        $accent-color: material.get-color-from-palette($accent);
        background: $primary-color;
        color: $accent-color;

        background: $primary-color;
        color: $accent-color;
    }
    @if $theme == 'light' {
        $theme: material.get-color-config(theme.$lib-light-theme);
        $color-config: material.get-color-config($theme);
        $primary: map.get($color-config, primary);
        $accent: map.get($color-config, accent);
        $warn: map.get($color-config, warn);

        $primary-color: material.get-color-from-palette($primary);
        $accent-color: material.get-color-from-palette($accent);

        background: $primary-color;
        color: $accent-color;
    }
}


@mixin app-component-theme($theme) {
    $background: map.get($theme, background);
    $foreground: map.get($theme, foreground);

    $color-config: material.get-color-config($theme);
    $primary: map.get($color-config, primary);
    $accent: map.get($color-config, accent);
    $warn: map.get($color-config, warn);
    $is-dark-theme: map.get($color-config, is-dark);

    $color-config: material.get-color-config($theme);
    $typography-config: material.get-typography-config($theme);

    @if $color-config != null {
        @include app-component-color($color-config);
    }
    @if $typography-config != null {
        @include app-component-typography($typography-config);
    }
}

@mixin app-component-color($config) {
    @debug ('shiiit');
    $primary: map.get($config, primary);
    $accent: map.get($config, accent);
    $warn: map.get($config, warn);
    $background: map.get($config, background);
    $foreground: map.get($config, foreground);
    .root-main, .main {
        background: map.get($config, caution);
        background-color: map.get($config, caution);
    }


}

@mixin app-component-typography($config) {
    @media (min-width: 0) {
        .responsive-test {
            color: red;
        }
    }
    @media (min-width: 480px) {
        .responsive-test {
            color: blue;
        }
    }
    @media (min-width: 720px) {
        .responsive-test {
            color: green;
        }
    }
    @media (min-width: 960px) {
        .responsive-test {
            color: purple;
        }
    }
    @media (min-width: 1200px) {
        .responsive-test {
            color: orange;
        }
    }
    @media (min-width: 1400px) {
        .responsive-test {
            color: pink;
        }
    }

}
